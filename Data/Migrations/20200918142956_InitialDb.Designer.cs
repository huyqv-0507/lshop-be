// <auto-generated />
using System;
using Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Data.Migrations
{
    [DbContext(typeof(LaptopDbContext))]
    [Migration("20200918142956_InitialDb")]
    partial class InitialDb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Data.Models.Brand", b =>
                {
                    b.Property<int>("BrandId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BrandName")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.HasKey("BrandId");

                    b.ToTable("Brands");
                });

            modelBuilder.Entity("Data.Models.Discount", b =>
                {
                    b.Property<int>("DiscountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("Code")
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime>("ExpiredTime")
                        .HasColumnType("datetime");

                    b.HasKey("DiscountId");

                    b.ToTable("Discounts");
                });

            modelBuilder.Entity("Data.Models.Laptop", b =>
                {
                    b.Property<int>("LaptopId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BrandId")
                        .HasColumnType("int");

                    b.Property<int?>("BrandId1")
                        .HasColumnType("int");

                    b.Property<string>("DisplayScreen")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("GraphicCard")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("LaptopName")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Pin")
                        .HasColumnType("varchar(50)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("SeriesCPU")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Storage")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Weight")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("LaptopId");

                    b.HasIndex("BrandId");

                    b.HasIndex("BrandId1");

                    b.ToTable("Laptops");
                });

            modelBuilder.Entity("Data.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime");

                    b.Property<string>("PaymentMethod")
                        .HasColumnType("varchar(50)");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("UserName")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("UserName1")
                        .HasColumnType("varchar(20)");

                    b.HasKey("OrderId");

                    b.HasIndex("UserName1");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Data.Models.OrderDetail", b =>
                {
                    b.Property<int>("OrderDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DiscountId")
                        .HasColumnType("int");

                    b.Property<int?>("DiscountId1")
                        .HasColumnType("int");

                    b.Property<int>("LaptopId")
                        .HasColumnType("int");

                    b.Property<int?>("LaptopId1")
                        .HasColumnType("int");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int?>("OrderId1")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("OrderDetailId");

                    b.HasIndex("DiscountId");

                    b.HasIndex("DiscountId1");

                    b.HasIndex("LaptopId");

                    b.HasIndex("LaptopId1");

                    b.HasIndex("OrderId");

                    b.HasIndex("OrderId1");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("Data.Models.Picture", b =>
                {
                    b.Property<int>("PictureId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("LaptopId")
                        .HasColumnType("int");

                    b.Property<int?>("LaptopId1")
                        .HasColumnType("int");

                    b.Property<string>("PictureUrl")
                        .HasColumnType("varchar(200)");

                    b.HasKey("PictureId");

                    b.HasIndex("LaptopId");

                    b.HasIndex("LaptopId1");

                    b.ToTable("Pictures");
                });

            modelBuilder.Entity("Data.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RoleName")
                        .HasColumnType("varchar(50)");

                    b.HasKey("RoleId");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Data.Models.User", b =>
                {
                    b.Property<string>("UserName")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int?>("RoleId1")
                        .HasColumnType("int");

                    b.HasKey("UserName");

                    b.HasIndex("RoleId");

                    b.HasIndex("RoleId1");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Data.Models.Laptop", b =>
                {
                    b.HasOne("Data.Models.Brand", null)
                        .WithMany("Laptops")
                        .HasForeignKey("BrandId")
                        .HasConstraintName("FK_Laptop_Brand")
                        .IsRequired();

                    b.HasOne("Data.Models.Brand", "Brand")
                        .WithMany()
                        .HasForeignKey("BrandId1");
                });

            modelBuilder.Entity("Data.Models.Order", b =>
                {
                    b.HasOne("Data.Models.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserName1");
                });

            modelBuilder.Entity("Data.Models.OrderDetail", b =>
                {
                    b.HasOne("Data.Models.Discount", "Discount")
                        .WithMany()
                        .HasForeignKey("DiscountId")
                        .HasConstraintName("FK_Discount_OrderDetail")
                        .IsRequired();

                    b.HasOne("Data.Models.Discount", null)
                        .WithMany("OrderDetails")
                        .HasForeignKey("DiscountId1");

                    b.HasOne("Data.Models.Laptop", "Laptop")
                        .WithMany()
                        .HasForeignKey("LaptopId")
                        .HasConstraintName("FK_Laptop_OrderDetail")
                        .IsRequired();

                    b.HasOne("Data.Models.Laptop", null)
                        .WithMany("OrderDetails")
                        .HasForeignKey("LaptopId1");

                    b.HasOne("Data.Models.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId")
                        .HasConstraintName("FK_Order_OrderDetail")
                        .IsRequired();

                    b.HasOne("Data.Models.Order", null)
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId1");
                });

            modelBuilder.Entity("Data.Models.Picture", b =>
                {
                    b.HasOne("Data.Models.Laptop", null)
                        .WithMany("Pictures")
                        .HasForeignKey("LaptopId")
                        .HasConstraintName("FK_Picture_Laptop")
                        .IsRequired();

                    b.HasOne("Data.Models.Laptop", "Laptop")
                        .WithMany()
                        .HasForeignKey("LaptopId1");
                });

            modelBuilder.Entity("Data.Models.User", b =>
                {
                    b.HasOne("Data.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .HasConstraintName("FK_User_Role")
                        .IsRequired();

                    b.HasOne("Data.Models.Role", null)
                        .WithMany("Users")
                        .HasForeignKey("RoleId1");
                });
#pragma warning restore 612, 618
        }
    }
}
